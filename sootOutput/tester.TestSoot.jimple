public class tester.TestSoot extends java.lang.Object
{

    public void <init>()
    {
        tester.TestSoot this;

        this := @this: tester.TestSoot;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] argv;
        java.util.HashSet $r0, m;
        int i;
        java.util.LinkedHashSet n, $r3;
        java.util.Iterator j, i;
        java.lang.String nextT, nextT2, $r2, $r6;
        java.lang.StringBuilder $r1;
        boolean $z0;
        java.lang.Object $r4;
        java.io.PrintStream $r5;

        argv := @parameter0: java.lang.String[];
        $r0 = new java.util.HashSet;
        specialinvoke $r0.<java.util.HashSet: void <init>()>();
        m = $r0;
        i = 0;
        goto label1;

     label0:
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i);
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke m.<java.util.HashSet: boolean add(java.lang.Object)>($r2);
        i = i + 1;

     label1:
        if i < 10 goto label0;

        $r3 = new java.util.LinkedHashSet;
        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();
        n = $r3;
        i = 0;
        goto label3;

     label2:
        $r1 = new java.lang.StringBuilder;
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i);
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke n.<java.util.LinkedHashSet: boolean add(java.lang.Object)>($r2);
        i = i + 1;

     label3:
        if i < 10 goto label2;

        i = virtualinvoke m.<java.util.HashSet: java.util.Iterator iterator()>();
        j = virtualinvoke n.<java.util.LinkedHashSet: java.util.Iterator iterator()>();
        goto label5;

     label4:
        $r4 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>();
        nextT = (java.lang.String) $r4;
        $r5 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuilder;
        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(nextT);
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>($r2);

     label5:
        $z0 = interfaceinvoke i.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label4;

        goto label7;

     label6:
        $r4 = interfaceinvoke j.<java.util.Iterator: java.lang.Object next()>();
        nextT2 = (java.lang.String) $r4;
        $r5 = <java.lang.System: java.io.PrintStream out>;
        $r1 = new java.lang.StringBuilder;
        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(nextT2);
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();
        virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>($r2);

     label7:
        $z0 = interfaceinvoke j.<java.util.Iterator: boolean hasNext()>();
        if $z0 != 0 goto label6;

        return;
    }
}
